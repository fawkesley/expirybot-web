

upstream expirybot_gunicorn {
  # fail_timeout=0 means we always retry an upstream even if it failed
  # to return a good HTTP response

  server 127.0.0.1:8011 fail_timeout=0;
}

server {
    listen 443;
    listen [::]:443;

    server_name www.expirybot.com;

    ssl_certificate           /etc/letsencrypt/live/www.expirybot.com/fullchain.pem;
    ssl_certificate_key       /etc/letsencrypt/live/www.expirybot.com/privkey.pem;

    ssl on;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_ecdh_curve secp384r1; # Requires nginx >= 1.1.0
    ssl_session_cache shared:SSL:10m;

    # ssl_session_tickets off; # Requires nginx >= 1.5.9

    ssl_stapling on; # Requires nginx >= 1.3.7
    ssl_stapling_verify on; # Requires nginx => 1.3.7
    resolver 213.73.91.35 8.8.8.8 valid=300s;
    resolver_timeout 5s;

    # https://www.owasp.org/index.php/HTTP_Strict_Transport_Security
    # TODO
    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";

    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;

    ## https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html#Logjam_(DH_EXPORT)
    ## To generate, run:
    ## $ sudo openssl dhparam -out /etc/ssl/certs/dhparam.pem 2048
    ##
    ssl_dhparam /etc/ssl/certs/dhparam.pem;  # LOGJAM and various others

    access_log            /var/log/nginx/access.log;
    error_log             /var/log/nginx/error.log;

    # TODO
    # location ~* ^.+\.(css|js|png|jpg)$ {
    #     # Set css and js to expire in a very long time
    #     access_log off;
    #     expires 7d;
    # }

    # path for static files
    root /home/expirybot-web/app/collected_static;

    location / {
      # checks for static file, if not found proxy to app
      try_files $uri @proxy_to_app;
    }

    location @proxy_to_app {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      # enable this if and only if you use HTTPS
      # proxy_set_header X-Forwarded-Proto https;

      proxy_set_header Host $http_host;

      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_redirect off;
      proxy_pass http://expirybot_gunicorn;
    }

}
